{
    // Global settings
    "passfail": false // Stop on first error.
  , "browser": false
  , "node": true

  // framework globals
  , "predef": ["klass", "v"] // klass and Valentine

    // Development.
  , "devel": true // Allow developments statements e.g. `console.log();`.
  , "es5": true // Allow ECMAScript 5 syntax.

    // Core
  , "asi": true // Tolerate Automatic Semicolon Insertion (no semicolons).
  , "laxbreak": true // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
  , "laxcomma": true // Tolerate leading commas.
  , "bitwise": false // Prohibit bitwise operators (&, |, ^, etc.).
  , "boss": true // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
  , "curly": false // Require {} for every new block or scope.
  , "eqeqeq": false // Require triple equals i.e. `===`.
  , "eqnull": true // Tolerate use of `== null`.
  , "evil": false // Tolerate use of `eval`.
  , "forin": false // Tolerate `for in` loops without `hasOwnPrototype`.
  , "immed": false // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
  , "latedef": false // Prohipit variable use before definition.
  , "loopfunc": true // Allow functions to be defined within loops.
  , "noarg": true // Prohibit use of `arguments.caller` and `arguments.callee`.
  , "regexp": false // Prohibit `.` and `[^...]` in regular expressions.
  , "expr": true // allow boss style expressions (foo && foo())
  , "regexdash": true // Tolerate unescaped last dash i.e. `[-...]`.
  , "shadow": false // Allows re-define variables later in code e.g. `var x=1; x=2;`.
  , "supernew": false // Tolerate `new function () { ... };` and `new Object;`.
  , "undef": true // Require all non-global variables be declared before they are used.

    // Personal styles
  , "newcap": true // Require capitalization of all constructor functions e.g. `new F()`.
  , "noempty": false // Prohibit use of empty blocks.
  , "nonew": false // Prohibit use of constructors for side-effects.
  , "onevar": false // Allow only one `var` statement per function.
  , "plusplus": false // Prohibit use of `++` & `--`.
  , "sub": true // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
  , "trailing": true // Prohibit trailing whitespaces.
  , "white": true // Check against strict whitespace and indentation rules.
  , "indent": 2 // Specify indentation spacing
  , "smarttabs": false // no mixed tabs and spaces! use spaces!
}
